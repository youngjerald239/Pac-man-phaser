{"id":"scenes/Preloader.ts","dependencies":[{"name":"C:\\Users\\young\\seir-329\\game-dev\\Pac-man\\phaser\\tsconfig.json","includedInParent":true,"mtime":1664719522448},{"name":"C:\\Users\\young\\seir-329\\game-dev\\Pac-man\\phaser\\package.json","includedInParent":true,"mtime":1665681766587},{"name":"phaser","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\young\\seir-329\\game-dev\\Pac-man\\phaser\\src\\scenes\\Preloader.ts","resolved":"C:\\Users\\young\\seir-329\\game-dev\\Pac-man\\phaser\\node_modules\\phaser\\src\\phaser.js"},{"name":"~/consts/SceneKeys","loc":{"line":2,"column":22,"index":52},"parent":"C:\\Users\\young\\seir-329\\game-dev\\Pac-man\\phaser\\src\\scenes\\Preloader.ts","resolved":"C:\\Users\\young\\seir-329\\game-dev\\Pac-man\\phaser\\src\\consts\\SceneKeys.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nvar _SceneKeys = _interopRequireDefault(require(\"~/consts/SceneKeys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Preloader = /*#__PURE__*/function (_Phaser$Scene) {\n  _inherits(Preloader, _Phaser$Scene);\n\n  var _super = _createSuper(Preloader);\n\n  function Preloader() {\n    _classCallCheck(this, Preloader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Preloader, [{\n    key: \"preload\",\n    value: function preload() {\n      this.load.atlas('tiles', 'assets/board.png', 'assets/board.json');\n      this.load.atlas('game-atlas', 'assets/game.png', 'assets/game.json');\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      this.scene.start(_SceneKeys.default.Game);\n    }\n  }]);\n\n  return Preloader;\n}(_phaser.default.Scene);\n\nexports.default = Preloader;"},"sourceMaps":{"js":{"mappings":[{"source":"scenes/Preloader.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":36,"column":4}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":6,"column":1},"generated":{"line":49,"column":11}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":49,"column":30}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":50,"column":6}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":50,"column":11}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":50,"column":15}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":50,"column":16}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":50,"column":21}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":18},"generated":{"line":50,"column":22}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":50,"column":29}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":50,"column":31}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":50,"column":49}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":47},"generated":{"line":50,"column":51}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":50,"column":70}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":51,"column":6}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":51,"column":11}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":51,"column":15}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":51,"column":16}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":51,"column":21}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":51,"column":22}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":51,"column":34}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":51,"column":36}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":51,"column":53}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":51},"generated":{"line":51,"column":55}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":51,"column":73}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":52,"column":4}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":12,"column":1},"generated":{"line":55,"column":11}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":55,"column":29}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":56,"column":6}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":56,"column":11}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":56,"column":16}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":56,"column":17}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":56,"column":22}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":19},"generated":{"line":56,"column":23}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":19},"generated":{"line":56,"column":41}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":56,"column":42}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":56,"column":46}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":57,"column":4}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":4,"column":39},"generated":{"line":61,"column":2}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":4,"column":39},"generated":{"line":61,"column":17}},{"source":"scenes/Preloader.ts","name":null,"original":{"line":4,"column":46},"generated":{"line":61,"column":18}}],"sources":{"scenes/Preloader.ts":"import Phaser from 'phaser'\r\nimport SceneKeys from '~/consts/SceneKeys'\r\n\r\nexport default class Preloader extends Phaser.Scene\r\n{\r\n\tpreload()\r\n\t{\r\n\t\tthis.load.atlas('tiles', 'assets/board.png', 'assets/board.json')\r\n\t\tthis.load.atlas('game-atlas', 'assets/game.png', 'assets/game.json')\r\n\t}\r\n\r\n\tcreate()\r\n\t{\r\n\t\tthis.scene.start(SceneKeys.Game)\r\n\t}\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"1588b4cbf278966ac049165291499e7e","cacheData":{"env":{}}}